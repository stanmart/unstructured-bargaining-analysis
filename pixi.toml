[project]
name = "unstructured-bargaining-analysis"
version = "0.1.0"
description = "Data analysis scripts for the unstructured bargaining experiment."
authors = ["Mia Lu <mia.lu@econ.uzh.ch>", "Martin Stancsics <martin.stancsics@gmail.com>"]
channels = ["conda-forge", "bioconda", "nvidia"]
platforms = ["linux-64", "win-64", "osx-64", "osx-arm64"]

[system-requirements]
linux = "5.4.0"

[tasks]
create-figures = "snakemake --cores 1 figures"
create-datasets = "snakemake --cores 1 create_datasets"
power-analysis = "snakemake --cores 1 power_analysis"
run-analysis = "snakemake --cores 1 run_analysis" 

[dependencies]
python = "3.11.*"
snakemake = {version = "7.*.*", channel = "bioconda"}
polars = "0.20.*"
numpy = "1.26.*"
scipy = "1.13.*"
statsmodels = "0.14.*"
jupyterlab = "4.1.*"
nbconvert = "7.16.*"
altair = "5.3.*"
pyarrow = ">=12.0.1,<16.2"
seaborn = ">=0.13.2,<0.14"
scikit-learn = ">=1.5.0,<1.6"
spacy = ">=3.7.4,<3.8"
pip = ">=24.0,<25"
shap = ">=0.45.1,<0.46"

[environments]
default = { solve-group = "main" }
cuda = { features = ["cuda"] }
checks = { features = ["checks"], solve-group = "main" }
build-graphs = { features = ["build-graphs"], no-default-feature = true }

[feature.cuda]
platforms = ["linux-64"]
system-requirements = { cuda = "11" }
[feature.cuda.target.linux-64.dependencies]
transformers = ">=4.41.2,<4.42"
[feature.cuda.dependencies]
pytorch-gpu = ">=2.3.0,<2.4"
evaluate = ">=0.4.1,<0.5"
accelerate = ">=0.31.0,<0.32"
[feature.cuda.tasks]
shap-values = "snakemake --cores 1 shap_contributions"

[feature.checks.dependencies]
ruff = "*"
codespell = "*"
pyright = "*"
gh = "*"
[feature.checks.tasks]
checks = { depends_on = ["format", "lint", "typecheck", "spellcheck", "data-check"] }
format = "ruff check --fix --select I; ruff format; exit 0"
lint = "ruff check --extend-select I; exit 0"
spellcheck = "codespell --ignore-words codespell-ignore-words.txt --skip '*.csv,playground,out' && echo 'Spellcheck passed!'; exit 0"
typecheck = "pyright; exit 0"
data-check = "gh variable list --json name --json value -q '.[] | select(.name | contains(\"RAW_DATA_CHECKSUMS\")) .value' | shasum -a 256 --check --quiet && echo 'Data integrity check passed!'"

[feature.build-graphs.dependencies]
snakemake = {version = "7.*.*", channel = "bioconda"}
graphviz = "*"
[feature.build-graphs.tasks]
create-build-graph-dir = "mkdir -p build-graphs"
dag = { cmd = "snakemake --dag | dot -Tsvg > build-graphs/dag.svg", depends-on = ["create-build-graph-dir"] }
rulegraph = { cmd = "snakemake --rulegraph | dot -Tsvg > build-graphs/rulegraph.svg", depends-on = ["create-build-graph-dir"] }
filegraph = { cmd = "snakemake --filegraph | dot -Tsvg > build-graphs/filegraph.svg", depends-on = ["create-build-graph-dir"] }
